(window.webpackJsonp=window.webpackJsonp||[]).push([[67],{502:function(e,t,a){"use strict";a.r(t);var o=a(2),l=Object(o.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"week-4-day-1"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#week-4-day-1"}},[e._v("#")]),e._v(" Week 4 Day 1")]),e._v(" "),a("p",[e._v("What are some of the signs and causes of Callback Hell?")]),e._v(" "),a("p",[e._v("What does the asynchronous mean and how are callbacks involved?")]),e._v(" "),a("p",[e._v("Summarize the 3 ways to avoid / fix Callback Hell")]),e._v(" "),a("ol",[a("li",[a("p",[e._v("Callback hell is when people try to make their code run from top to bottom when calling in from API's. But javascript doesn't do that with callbacks.")])]),e._v(" "),a("li",[a("p",[e._v("Async means takes some time. It is used so taht functions that could take time to complete don't completely stop the code from happening.")])]),e._v(" "),a("li",[a("p",[e._v("Some ways to avoid callback hell is to keep your code shallow and precise. Don't make one thing try to call a lot of different things, instead try to make sure you have a bunch of different small things trying to call one thing apiece.")])])]),e._v(" "),a("p",[e._v("Daily Challenge\nhttps://github.com/JordanWilker/Week-4-Day-1")])])}),[],!1,null,null,null);t.default=l.exports}}]);